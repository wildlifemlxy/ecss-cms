name: ECSS Backend Django

#Try 1
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # Required for actions/checkout
      id-token: write  # Required for Azure login

    environment:
      name: 'Production'

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Create virtual environment and install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          
          if [ -f djangoPython/requirements.txt ]; then
            echo "Installing dependencies from djangoPython/requirements.txt"
            pip install -r djangoPython/requirements.txt --no-cache-dir
            echo "✓ Dependencies installed successfully"
          else
            echo "❌ requirements.txt not found in djangoPython/ directory"
            exit 1
          fi

      - name: Zip artifact for deployment
        run: |
          # Activate virtual environment
          source venv/bin/activate
          
          # Create a clean deployment directory
          rm -rf deployment_package
          mkdir -p deployment_package
          
          # Copy Django application files (flatten the structure)
          cp -r djangoPython/* deployment_package/
          
          # Copy installed packages to deployment
          echo "Copying Python packages..."
          cp -r venv/lib/python*/site-packages/* deployment_package/ 2>/dev/null || echo "Package copy skipped"
          
          # Remove unnecessary files
          find deployment_package -name "*.pyc" -delete
          find deployment_package -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
          find deployment_package -name ".DS_Store" -delete 2>/dev/null || true
          find deployment_package -name "*.pyo" -delete 2>/dev/null || true
          find deployment_package -name "tests" -type d -exec rm -rf {} + 2>/dev/null || true
          
          # Create the deployment zip
          cd deployment_package
          zip -r ../release.zip . -x "*.DS_Store*"
          cd ..
          
          echo "✓ Deployment package created successfully"

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_DB1EDA88A3DA4E8D846F3C3D5AB12A22 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_22BDF8F60B124137A56F942213EAB1D3 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1F917677349441DF9FFD4FFAA1773557 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ecss-backend-django'
          slot-name: 'Production'
          package: release.zip
