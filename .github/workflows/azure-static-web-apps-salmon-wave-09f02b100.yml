name: ECSS Frontend React + Vite - As of Jun 19 2025, 2000 hrs

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  check_for_changes:
    runs-on: ubuntu-latest
    name: Check for Changes in frontend directory
    outputs:
      changes_detected: ${{ steps.check-changes.outputs.changes_detected }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Fetch the previous commit to compare against
      # - name: Fetch previous commit
      #  run: |
      #    git fetch origin main --depth=2

      # Check if there are any changes in the frontend directory between the previous and current commit
      #- name: Check for changes in frontend directory
      #  id: check-changes
      #  run: |
      #    CHANGES=$(git diff --name-only HEAD~1 HEAD -- frontend)
      #    if [ -z "$CHANGES" ]; then
      #      echo "No changes detected in frontend folder."
      #      echo "::set-output name=changes_detected::false"
      #    else
      #      echo "Changes detected in frontend folder."
      #      echo "::set-output name=changes_detected::true"
      #    fi
      #    exit 0  # Ensure script exits with 0 regardless of changes detected
          
  build_and_deploy_job:
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string
      
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_WAVE_09F02B100 }}
          action: "upload"
          app_location: "./frontend" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "dist" # Built app content directory - optional
          github_id_token: ${{ steps.idtoken.outputs.result }}

  # Close pull request job (commented out)
  #close_pull_request_job:
  #  if: github.event_name == 'pull_request' && github.event.action == 'closed'
  #  runs-on: ubuntu-latest
  #  name: Close Pull Request Job
  #  steps:
  #    - name: Close Pull Request
  #      id: closepullrequest
  #      uses: actions/github-script@v6
  #      with:
  #        script: |
  #          const { context, core } = require('@actions/github');
  #          const prNumber = context.payload.pull_request.number;
  #          
  #          // Using GitHub API to close the pull request
  #          await github.rest.pulls.update({
  #            owner: context.repo.owner,
  #            repo: context.repo.repo,
  #            pull_number: prNumber,
  #            state: 'closed'
  #          });
            
  #    - name: Ensure job completes
  #      run: |
  #        echo "Pull request closed. The job is complete."
  #        exit 0  # Exit with 0 to ensure the job finishes successfully
